#!/bin/sh

# load global defaults
. $HOME/etc/config

if test "z$1" == "z"; then
        echo "Date not specified! Aborting."
        exit 1
else
        DATE=$1
fi

if test "z$2" == "z"; then
        echo "Frequency not specified! Aborting."
        exit 1
else
        FREQUENCY=$2
fi

TODO=`ls *.$FREQUENCY | awk -F. '{print $1}'`

if test "z$TODO" == "z"; then
        echo "No files found for specified frequency $FREQUENCY!"
        exit 1
fi

echo "-----------------------------------------" >> $LOGS/$DATE.txt
echo "Backup started `date`" >> $LOGS/$DATE.txt
echo "-----------------------------------------" >> $LOGS/$DATE.txt
echo "`mt status`" >> $LOGS/$DATE.txt
echo "-----------------------------------------" >> $LOGS/$DATE.txt

for SERVER in $TODO; do
	# load config override file, if it exists
	if test -f "$HOME/etc/$SERVER"; then
		. $HOME/etc/$SERVER
	fi
	COUNT=1
	for LINE in `cat $SERVER.$FREQUENCY`; do
		PART=`echo $LINE | awk -F: '{print $1}'`
		FILE=`echo $LINE | awk -F: '{print $2}'`
		echo $PART > /tmp/backup.state
		echo "" >> $LOGS/$DATE.txt
		echo "-----------------------------------------" >> $LOGS/$DATE.txt
		echo "Backup started for $PART on $SERVER - `date`" >> $LOGS/$DATE.txt
		echo "-----------------------------------------" >> $LOGS/$DATE.txt
		if [ "$SERVER" == "$HOST" ]; then
			# host is local, no need to use SSH
			$TAR $ARCHIVE "$FILE" 1>> $LOGS/$DATE.txt 2>> $LOGS/tmp_error.txt
		else
			# host is remote, use SSH
			$SSH -p $SSH_PORT -l $USER $SERVER $TAR rio:$ARCHIVE "$FILE" 1>> $LOGS/$DATE.txt 2>> $LOGS/tmp_error.txt
		fi
		ERROR=$?

		echo "-----------------------------------------" >> $LOGS/$DATE.txt
		echo "Backup ended for $PART on $SERVER - `date`" >> $LOGS/$DATE.txt
		echo "-----------------------------------------" >> $LOGS/$DATE.txt
		echo "`mt status`" >> $LOGS/$DATE.txt
		echo "-----------------------------------------" >> $LOGS/$DATE.txt
		
		if [ -f $LOGS/tmp_error.txt ]
		then
			echo -n
		else
			exit 0
		fi
		
		if [ `grep -v "Removing leading" $LOGS/tmp_error.txt` ]
		then
			echo "Errors for $DATE" >> $LOGS/error.txt
			grep -v "Removing leading" $LOGS/tmp_error.txt >> $LOGS/error.txt
		fi

		rm $LOGS/tmp_error.txt

		if test $ERROR -ne 0; then exit $ERROR; fi
		COUNT=`expr $COUNT + 1`
	done
done
